"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[274],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(r),m=i,d=c["".concat(u,".").concat(m)]||c[m]||g[m]||o;return r?n.createElement(d,a(a({ref:t},p),{},{components:r})):n.createElement(d,a({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9165:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),i=(r(7294),r(3905));const o={sidebar_position:1},a="\ud83d\udc19 GitHub",l={unversionedId:"installing/github",id:"installing/github",title:"\ud83d\udc19 GitHub",description:"This guide will walk you through setting up and using AutoPR as a GitHub Action.",source:"@site/docs/installing/github.md",sourceDirName:"installing",slug:"/installing/github",permalink:"/installing/github",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/installing/github.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udf31 Installing",permalink:"/category/-installing"},next:{title:"\u2702\ufe0f Configuring",permalink:"/configuring"}},u={},s=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Setup",id:"setup",level:3}],p={toc:s},c="wrapper";function g(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-github"},"\ud83d\udc19 GitHub"),(0,i.kt)("p",null,"This guide will walk you through setting up and using AutoPR as a GitHub Action."),(0,i.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"You need your own OpenAI API key."),(0,i.kt)("h3",{id:"setup"},"Setup"),(0,i.kt)("p",null,"Follow these steps to set up AutoPR in your GitHub repository:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a new file in your repository named ",(0,i.kt)("inlineCode",{parentName:"li"},".github/workflows/autopr.yaml")," and copy the contents from ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/irgolic/AutoPR-template/blob/main/.github/workflows/autopr.yaml"},"the GitHub workflow template"),"."),(0,i.kt)("li",{parentName:"ol"},"Create a new file in your repository named ",(0,i.kt)("inlineCode",{parentName:"li"},".autopr/triggers.yaml")," and copy the contents from ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/irgolic/AutoPR-template/blob/main/.autopr/triggers.yaml"},"the triggers template"),"."),(0,i.kt)("li",{parentName:"ol"},"In your GitHub repository settings, navigate to ",(0,i.kt)("inlineCode",{parentName:"li"},"Secrets and variables -> Actions")," and add your OpenAI API key as ",(0,i.kt)("inlineCode",{parentName:"li"},"OPENAI_API_KEY"),"."),(0,i.kt)("li",{parentName:"ol"},"In your GitHub repository settings, go to ",(0,i.kt)("inlineCode",{parentName:"li"},"Actions -> General")," and scroll down to ",(0,i.kt)("inlineCode",{parentName:"li"},"Workflow permissions"),". Enable ",(0,i.kt)("inlineCode",{parentName:"li"},"Allow GitHub Actions to create and approve pull requests"),".")),(0,i.kt)("p",null,"That's it! Check out the ",(0,i.kt)("a",{parentName:"p",href:"../configuring"},"Configuring guide")," to see how to customize AutoPR for your repository."))}g.isMDXComponent=!0}}]);